trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

name: $(Build.BuildId)

variables:
- name: BuildConfiguration
  value: Release

stages:
- stage: build
  displayName: Build NuGet Packages
  jobs:
  - job: buildJob
    displayName: Build Module
    pool:
      vmImage: macOS-10.14
      demands:
      - MSBuild
      - Xamarin.Android
      - JDK
      - AndroidSDK
    steps:
    - powershell: |
       Write-Host "Downloading nuget.exe"
       Invoke-WebRequest -Uri 'https://dist.nuget.org/win-x86-commandline/v5.1.0/nuget.exe' -OutFile 'nuget.exe'
       Write-Host "Clearing local cache"
       ./nuget.exe locals all -clear
       Write-Host "Restoring NuGet packages"
       ./nuget.exe restore src/ExhibitorModule/ExhibitorModule.csproj -NoCache -NonInteractive
      displayName: NuGet Restore

    - task: MSBuild@1
      displayName: Build Projects
      inputs:
        solution: 'src/ExhibitorModule//ExhibitorModule.csproj'
        configuration: $(BuildConfiguration)
        msbuildArguments: '/p:DebugType=portable /p:JavaSdkDirectory="$(JAVA_HOME)"'

    - task: PublishPipelineArtifact@0
      displayName: Publish Artifacts
      inputs:
        artifactName: NuGet
        targetPath: $(Build.ArtifactStagingDirectory)

- stage: deploy
  displayName: Deploy NuGets
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: NuGet
    displayName: NuGet.org
    environment: NuGet
    condition: and(succeeded(), or(eq(variables['IS_PREVIEW'], true), eq(variables['IS_RELEASE'], true)))
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            displayName: NuGet Push
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;!$(Pipeline.Workspace)/**/*.symbols.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'NuGet'
